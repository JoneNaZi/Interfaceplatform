"""empty message

Revision ID: 4070dfc82d65
Revises: 
Create Date: 2021-11-19 16:30:58.320369

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4070dfc82d65'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groupinterface',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('testgroupid', sa.Integer(), nullable=True),
    sa.Column('testinterface', sa.Integer(), nullable=True),
    sa.Column('addtime', sa.Date(), nullable=True),
    sa.Column('adduser', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('sceness',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=252), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('parame', sa.String(length=252), nullable=True),
    sa.Column('assertparame', sa.String(length=252), nullable=True),
    sa.Column('center', sa.String(length=128), nullable=True),
    sa.Column('createtime', sa.DateTime(), nullable=True),
    sa.Column('desc', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('testgroup',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=252), nullable=True),
    sa.Column('projectid', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('adduser', sa.Integer(), nullable=True),
    sa.Column('addtime', sa.Date(), nullable=True),
    sa.Column('updateuser', sa.Integer(), nullable=True),
    sa.Column('updatetime', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('testjmx',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('intefaceid', sa.Integer(), nullable=True),
    sa.Column('runcounttest', sa.String(length=252), nullable=True),
    sa.Column('loopcount', sa.String(length=252), nullable=True),
    sa.Column('jmxpath', sa.String(length=252), nullable=True),
    sa.Column('serverid', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=252), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('testservers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ip', sa.String(length=252), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('loginuser', sa.String(length=64), nullable=True),
    sa.Column('loginpassword', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('createuser', sa.Integer(), nullable=True),
    sa.Column('creatdate', sa.Date(), nullable=True),
    sa.Column('updateuser', sa.Integer(), nullable=True),
    sa.Column('updatetime', sa.Date(), nullable=True),
    sa.Column('is_run', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('works',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=63), nullable=True),
    sa.Column('password', sa.String(length=252), nullable=True),
    sa.Column('user_email', sa.String(length=64), nullable=True),
    sa.Column('jobnum', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('is_login', sa.Boolean(), nullable=True),
    sa.Column('is_sper', sa.Boolean(), nullable=True),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('freetime', sa.DateTime(), nullable=True),
    sa.Column('err_num', sa.Integer(), nullable=True),
    sa.Column('work_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('emailReports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email_re_user_id', sa.Integer(), nullable=True),
    sa.Column('send_email', sa.String(length=64), nullable=True),
    sa.Column('send_email_password', sa.String(length=64), nullable=True),
    sa.Column('stmp_email', sa.String(length=64), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('to_email', sa.String(), nullable=True),
    sa.Column('default_set', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['email_re_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mockserver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('make_uers', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('path', sa.String(length=252), nullable=True),
    sa.Column('methods', sa.String(length=50), nullable=True),
    sa.Column('headers', sa.String(length=500), nullable=True),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.Column('fanhui', sa.String(length=500), nullable=True),
    sa.Column('params', sa.String(length=500), nullable=True),
    sa.Column('rebacktype', sa.String(length=32), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('delete', sa.Boolean(), nullable=True),
    sa.Column('ischeck', sa.Boolean(), nullable=True),
    sa.Column('is_headers', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['make_uers'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_user_id', sa.Integer(), nullable=True),
    sa.Column('project_name', sa.String(length=252), nullable=True),
    sa.Column('project_desc', sa.String(length=252), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['project_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_name')
    )
    op.create_table('userloginlog',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('ip', sa.String(length=252), nullable=True),
    sa.Column('datatime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ceshihuanjing',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('make_user', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(length=252), nullable=True),
    sa.Column('desc', sa.String(length=252), nullable=True),
    sa.Column('database', sa.String(length=252), nullable=True),
    sa.Column('dbport', sa.String(length=252), nullable=True),
    sa.Column('dbhost', sa.String(length=252), nullable=True),
    sa.Column('databaseuser', sa.String(length=32), nullable=True),
    sa.Column('databasepassword', sa.String(length=32), nullable=True),
    sa.Column('project', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['make_user'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('models',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_name', sa.String(length=256), nullable=True),
    sa.Column('model_user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('project', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['model_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quanxians',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rose', sa.Integer(), nullable=True),
    sa.Column('project', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['rose'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tstresults',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Test_user_id', sa.Integer(), nullable=True),
    sa.Column('test_num', sa.Integer(), nullable=True),
    sa.Column('pass_num', sa.Integer(), nullable=True),
    sa.Column('fail_num', sa.Integer(), nullable=True),
    sa.Column('Exception_num', sa.Integer(), nullable=True),
    sa.Column('can_num', sa.Integer(), nullable=True),
    sa.Column('wei_num', sa.Integer(), nullable=True),
    sa.Column('projects_id', sa.Integer(), nullable=True),
    sa.Column('test_time', sa.DateTime(), nullable=True),
    sa.Column('hour_time', sa.Integer(), nullable=True),
    sa.Column('test_rep', sa.String(length=252), nullable=True),
    sa.Column('test_log', sa.String(length=252), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['Test_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['projects_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=252), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('style', sa.Integer(), nullable=True),
    sa.Column('sleepnum', sa.Integer(), nullable=True),
    sa.Column('sql', sa.String(length=252), nullable=True),
    sa.Column('sqlfiled', sa.String(length=252), nullable=True),
    sa.Column('testevent', sa.Integer(), nullable=True),
    sa.Column('caseid', sa.Integer(), nullable=True),
    sa.Column('requestsurl', sa.String(length=252), nullable=True),
    sa.Column('requestsparame', sa.String(length=252), nullable=True),
    sa.Column('requestmethod', sa.String(length=8), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['testevent'], ['ceshihuanjing.id'], ),
    sa.ForeignKeyConstraint(['user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_actions_name'), 'actions', ['name'], unique=True)
    op.create_table('generalconfigurations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('addtime', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=252), nullable=False),
    sa.Column('style', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(length=252), nullable=True),
    sa.Column('token_parame', sa.String(length=252), nullable=True),
    sa.Column('token_url', sa.String(length=252), nullable=True),
    sa.Column('token_method', sa.String(length=16), nullable=True),
    sa.Column('sqlurl', sa.String(length=252), nullable=True),
    sa.Column('request_url', sa.String(length=252), nullable=True),
    sa.Column('request_parame', sa.String(length=252), nullable=True),
    sa.Column('request_method', sa.String(length=252), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('testevent', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['testevent'], ['ceshihuanjing.id'], ),
    sa.ForeignKeyConstraint(['user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generalconfigurations_name'), 'generalconfigurations', ['name'], unique=True)
    op.create_table('interfaces',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('projects_id', sa.Integer(), nullable=True),
    sa.Column('Interface_name', sa.String(length=252), nullable=True),
    sa.Column('Interface_url', sa.String(length=252), nullable=True),
    sa.Column('Interface_meth', sa.String(length=252), nullable=True),
    sa.Column('Interface_headers', sa.String(length=252), nullable=True),
    sa.Column('Interface_user_id', sa.Integer(), nullable=True),
    sa.Column('interfacetype', sa.String(length=32), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['Interface_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.ForeignKeyConstraint(['projects_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quanxianusers',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('quanxians_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quanxians_id'], ['quanxians.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('makeuser', sa.Integer(), nullable=True),
    sa.Column('taskname', sa.String(length=52), nullable=True),
    sa.Column('taskstart', sa.String(length=252), nullable=True),
    sa.Column('taskmakedate', sa.DateTime(), nullable=True),
    sa.Column('taskrepor_to', sa.String(length=252), nullable=True),
    sa.Column('taskrepor_cao', sa.String(length=252), nullable=True),
    sa.Column('task_make_email', sa.String(length=252), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('yunxing_status', sa.String(), nullable=True),
    sa.Column('prject', sa.Integer(), nullable=True),
    sa.Column('testevent', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['makeuser'], ['users.id'], ),
    sa.ForeignKeyConstraint(['prject'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['testevent'], ['ceshihuanjing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interfacetests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('projects_id', sa.Integer(), nullable=True),
    sa.Column('interface_id', sa.Integer(), nullable=True),
    sa.Column('bian_num', sa.String(length=252), nullable=True),
    sa.Column('interface_type', sa.String(length=16), nullable=True),
    sa.Column('Interface_name', sa.String(length=252), nullable=True),
    sa.Column('Interface_url', sa.String(length=252), nullable=True),
    sa.Column('Interface_meth', sa.String(length=252), nullable=True),
    sa.Column('Interface_pase', sa.String(length=252), nullable=True),
    sa.Column('Interface_assert', sa.String(length=252), nullable=True),
    sa.Column('Interface_headers', sa.String(length=252), nullable=True),
    sa.Column('pid', sa.Integer(), nullable=True),
    sa.Column('getattr_p', sa.String(length=252), nullable=True),
    sa.Column('Interface_is_tiaoshi', sa.Boolean(), nullable=True),
    sa.Column('Interface_tiaoshi_shifou', sa.Boolean(), nullable=True),
    sa.Column('Interface_user_id', sa.Integer(), nullable=True),
    sa.Column('saveresult', sa.Boolean(), nullable=True),
    sa.Column('is_database', sa.Boolean(), nullable=True),
    sa.Column('chaxunshujuku', sa.String(length=252), nullable=True),
    sa.Column('databaseziduan', sa.String(length=252), nullable=True),
    sa.Column('is_ci', sa.Boolean(), nullable=True),
    sa.Column('is_smoke', sa.Integer(), nullable=True),
    sa.Column('is_reback', sa.Integer(), nullable=True),
    sa.Column('is_monitor', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['Interface_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['interface_id'], ['interfaces.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.ForeignKeyConstraint(['pid'], ['interfacetests.id'], ),
    sa.ForeignKeyConstraint(['projects_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parames',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('interface_id', sa.Integer(), nullable=True),
    sa.Column('parameter_type', sa.String(length=64), nullable=True),
    sa.Column('parameter_name', sa.String(length=64), nullable=True),
    sa.Column('necessary', sa.Boolean(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('default', sa.String(length=63), nullable=True),
    sa.Column('desc', sa.String(length=252), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['interface_id'], ['interfaces.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('caseactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('case', sa.Integer(), nullable=True),
    sa.Column('action', sa.Integer(), nullable=True),
    sa.Column('actiontype', sa.Integer(), nullable=True),
    sa.Column('filed', sa.String(length=252), nullable=True),
    sa.ForeignKeyConstraint(['action'], ['actions.id'], ),
    sa.ForeignKeyConstraint(['case'], ['interfacetests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('casegenerals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('case', sa.Integer(), nullable=True),
    sa.Column('general', sa.Integer(), nullable=True),
    sa.Column('filed', sa.String(length=252), nullable=True),
    sa.ForeignKeyConstraint(['case'], ['interfacetests.id'], ),
    sa.ForeignKeyConstraint(['general'], ['generalconfigurations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('registrations',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('interfacetests_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['interfacetests_id'], ['interfacetests.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], )
    )
    op.create_table('testcaseresults',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('case_id', sa.Integer(), nullable=True),
    sa.Column('result', sa.String(length=252), nullable=True),
    sa.Column('by', sa.Boolean(), nullable=True),
    sa.Column('spend', sa.String(length=52), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('testevir', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['interfacetests.id'], ),
    sa.ForeignKeyConstraint(['testevir'], ['ceshihuanjing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('yilai',
    sa.Column('case_id', sa.Integer(), nullable=True),
    sa.Column('cases_id', sa.Integer(), nullable=True),
    sa.Column('attred', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['interfacetests.id'], ),
    sa.ForeignKeyConstraint(['cases_id'], ['interfacetests.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('yilai')
    op.drop_table('testcaseresults')
    op.drop_table('registrations')
    op.drop_table('casegenerals')
    op.drop_table('caseactions')
    op.drop_table('parames')
    op.drop_table('interfacetests')
    op.drop_table('tasks')
    op.drop_table('quanxianusers')
    op.drop_table('interfaces')
    op.drop_index(op.f('ix_generalconfigurations_name'), table_name='generalconfigurations')
    op.drop_table('generalconfigurations')
    op.drop_index(op.f('ix_actions_name'), table_name='actions')
    op.drop_table('actions')
    op.drop_table('tstresults')
    op.drop_table('quanxians')
    op.drop_table('models')
    op.drop_table('ceshihuanjing')
    op.drop_table('userloginlog')
    op.drop_table('projects')
    op.drop_table('mockserver')
    op.drop_table('emailReports')
    op.drop_table('users')
    op.drop_table('works')
    op.drop_table('testservers')
    op.drop_table('testjmx')
    op.drop_table('testgroup')
    op.drop_table('sceness')
    op.drop_table('roles')
    op.drop_table('groupinterface')
    # ### end Alembic commands ###
